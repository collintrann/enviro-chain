if (substr(UID, start = 8, stop = 9) == "SQ") {
discount <- TRUE
} else {
discount <- FALSE
}
}
if (discount == TRUE) {
"Squirrel - Discount Applied"
} else {
"No discount"
}
}
check_UID("1234567SQ")
check_UID("0000000SQ")
check_UID(matrix("1111111SQ"))
check_UID(list("1111111SQ"))
check_UID(c("1234567SQ", "0000001SQ"))
check_UID("0000000SQSQ")
check_UID(123456789)
"ghij" = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15))
x
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15)))
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = list(k = 10, l = c(11, 12), m = c(13, 14, 15)))
x
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15)))
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
)
x
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9)
)
x
gj = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15))
gj
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15)))
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = gj)
x
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9))
str(x)
gj
gj$k
gj$m
x$bc
x[4]
x[3]
x[[3]]
gj[3]
gj[[3]]
x[[3]]
x[3]
x[4]
gj = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15))
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9)
"ghij" = "someList")
gj = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15))
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = "someList")
str(x)
x[4]
length(gj)
"ghij" = gj")
x <- data.frame("a" = c(1, 2, 3),
gj = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15))
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = gj)
with(x, def)
with(x, gj)
str(x)
with(x, gj)
str(x)
with(x, gj)
with(x, def)
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = gj)
with(x, gj)
str(x)
x
gj = list("k" = 10, "l" = c(11, 12), "m" = c(13, 14, 15))
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = gj)
str(x)
length(gj)
x[4]
gj[[3]]
with(x, gj)
x[4]
x[4][3]
x[[4]]
x[[4]][[3]]
gj[[3]]
with(x, gj)
with(with(x, gj), m)
x[[4]][[3]]
x
x[[4]][[3]]
with(with(x, gj), m)
x[[4]][[3]]
str(x)
x <- data.frame("a" = c(1, 2, 3),
"bc" = c(4, 5, 6),
"def" = c(7, 8, 9),
"ghij" = gj)
with(with(x, gj), m)
x
trees
summary(trees)
summary(trees$Height)
trees
summary(trees$Height)
trees
summary(trees$Height)
knitr::opts_chunk$set(echo = TRUE)
name <- c("Brad", "Beckett", "Samanthan", "D`Vana", "Carol")
hair_eye = matrix(c(tab$BROWN, tab$BLUE, tab$HAZEL, tab$GREEN))
tab <- data.frame(
C0 = c(rep("Hair Color", 3)),
C1 = c("BLACK", "BROWN", "BLONDE"),
C2 = c(32, 53, 03),
C3 = c(11, 50, 30),
C4 = c(10, 25, 05),
C5 = c(03, 15, 08)
)
colnames(tab) <- c("", "", "BROWN", "BLUE", "HAZEL", "GREEN")
tab %>%
kbl(align = "c", caption = "") %>%
add_header_above(c("Eye Color" = 6)) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = c("bordered"),
full_width = F,
position = "center",
latex_options = "hold_position") %>%
column_spec(1, border_left = T) %>%
column_spec(6, border_right = T) %>%
row_spec(0, bold = T, color = "blue") %>%
column_spec(2, bold = T, color = "blue") %>%
collapse_rows(columns = 1:2, valign = "middle")
hair_eye = matrix(c(tab[1,][3:6], tab[2,][3:6], tab[3,][3:6]), nrow = 3, ncol = 4, byrow = TRUE)
hair_eye
rownames(hair_eye) <- c("BLACK", "BROWN", "BLONDE")
colnames(hair_eye) <- c("BROWN", "BLUE", "HAZEL", "GREEN")
hair_eye
hair_eye["BLONDE", "BLUE"]
hair_eye["BLONDE", "BLUE"][1]
?rowsums
?rowSums
rowSums(hair_eye)
rowSums(hair_eye, dims = 1)
rowSums(hair_eye, dims = 2)
rowSums(hair_eye, dims = 1)
rowSums(hair_eye, dims = 0)
rowSums(hair_eye, dims = 1)
rowSums(hair_eye, dim=1)
rowSums(hair_eye, dims=1)
rowSums(hair_eye, dims=4)
rowSums(hair_eye, dim=4)
rowSums(hair_eye, dims=2)
rowSums(hair_eye, dims=1)
hair_eye = matrix(c(tab[1,][3:6], tab[2,][3:6], tab[3,][3:6]), nrow = 3, ncol = 4, byrow = TRUE)
hair_eye
rowSums(hair_eye, dims=1)
type(hair_eye)
typeof(hair_eye)
typeof(tab[1,][3:6])
tab[1,][3:6]
hair_eye = matrix(c(tab[1,][[3:6]], tab[2,][3:6], tab[3,][3:6]), nrow = 3, ncol = 4, byrow = TRUE)
tab[1,][3]
tab[1,][[3]]
tab[1,][[3:6]]
unlist(tab[1,][3:6])
unlist(hair_eye)
hair_eye = matrix(c(unlist(tab[1,][3:6]), unlist(tab[2,][3:6]), unlist(tab[3,][3:6])), nrow = 3, ncol = 4, byrow = TRUE)
hair_eye
typeof(tab[1,][3:6])
hair_eye
rowSums(hair_eye, dims=1)
rowSums(hair_eye)
colSums(hair_eye)
hair_eye = hair_eye[, 1:3]
hair_eye
hair_eye = hair_eye[, 1:3]
hair_eye
hair_eye <- hair_eye[, -4]
hair_eye
hair_eye <- hair_eye[, -4, drop=FALSE]
hair_eye
hair_eye <- hair_eye[, -4, drop=FALSE]
hair_eye
hair_eye <- matrix(c(as.numeric(tab[1,][3:6]), as.numeric(tab[2,][3:6]), as.numeric(tab[3,][3:6])), nrow = 3, ncol = 4, byrow = TRUE)
hair_eye
rownames(hair_eye) <- c("BLACK", "BROWN", "BLONDE")
colnames(hair_eye) <- c("BROWN", "BLUE", "HAZEL", "GREEN")
hair_eye
hair_eye["BLONDE", "BLUE"]
?rowSums
colSums(hair_eye)
hair_eye <- hair_eye[, -4, drop=FALSE]
hair_eye
hair_eye <- cbind(hair_eye, "GREEN" = c(5, 20, 10))
hair_eye
hw_score <- list(s1 = runif(10, 50, 100),
s2 = runif(10, 50, 100),
s3 = runif(10, 50, 100))
hw_score
hw_score[3]
hw_score$s3
hw_score[3]
hw_score$s3
hw_score["s3"]
hw_score[[3]]
hw_score[["s3"]]
typeof(hw_score[2])
hw_score_average
hw_score_average = list("ave_s1" = mean(hw_score[[1]]), "ave_s2" = mean(hw_score[[2]], "ave_s3" = mean(hw_score[[3]])))
hw_score_average
hw_score_average = list("ave_s1" = mean(hw_score[[1]]), "ave_s2" = mean(hw_score[[2]], "ave_s3" = mean(hw_score[[3]])))
hw_score_average
hw_score_average = list("ave_s1" = mean(hw_score[[1]]), "ave_s2" = mean(hw_score[[2]]), "ave_s3" = mean(hw_score[[3]])))
hw_score_average
hw_score_average = list("ave_s1" = mean(hw_score[[1]]), "ave_s2" = mean(hw_score[[2]]), "ave_s3" = mean(hw_score[[3]])))
hw_score_average = list("ave_s1" = mean(hw_score[[1]]), "ave_s2" = mean(hw_score[[2]]), "ave_s3" = mean(hw_score[[3]])))
hw_score_average = list("ave_s1" = mean(hw_score[[1]]), "ave_s2" = mean(hw_score[[2]]), "ave_s3" = mean(hw_score[[3]]))
hw_score_average
mean(hw_score_average)
mean(as.numeric(hw_score_average))
overall_avg <- mean(as.numeric(hw_score_average))
overall_avg
x <- c("hair", "follicle")
x
typeof(x)
y <- strsplit(x, "i")
y
y[[2]][1]
palm_2 <- read.csv("./data/palm.csv")
palm_2
knitr::opts_chunk$set(echo = TRUE)
palm <- read.csv("./data/palm.csv", header = T)
palm
palm$ID[all(palm$FP == max(palm$FP))]
palm$ID[which(palm$FP == max(palm$FP))]
palm$ID[palm$FP == max(palm$FP)]
palm_2$ID[which(palm_2$FP == max(palm_2$FP))]
any(palm_2$FP > 8)
which(palm_2$FP > 8)
which(palm_2$FP > 8) > 0
length(which(palm_2$FP > 8)) > 0
length(which(palm_2$FP > 12)) > 0
rep(c(2, 3, 5), times = 3)
rep(c(2, 3, 5), each = 3)
rep(c(2, 3, 5), each = 3)[-1]
#2
x <- c(-10L, 2L, 5L, 8L, -3L, 0L)
negative_x <- -x
typeof(negative_x)
counts <- c(3, 8, 5, 2, 6)
counts[2:4]
is.vector(c(1,2,3))
is.vector(1))
is.vector(1)
is.vector(list(1))
is.vector(list(1))
strsplit("wonder world", "o")
strsplit("wonderfulworld", "o")
strsplit("wonderful world", "o")
$_lecture_code> <- 1
_new_function <- 1
.var._1. <- 1
.var._1
.var._1. <- 1
.var._1
.var._1.
1st_time_coder <- 1
1
installed.packages()
?variance
man(var)
doc(var)
load(var)
?var
mtcars
mtcars.gear
mtcars$gear
pbinom(1200, 130, 1/12)
pbinom(1200, 130, 1/12)
?pbinom
pbinom(130, 1200, 1/12)
?pbinom
dbinom(130, 1200, 1/12)
?pbinom
pbinom(130, 1200, 1/12)
?pbinom
1 - pbinom(130, 1200, 1/12)
?pbinom
1 - pbinom(100, 1200, 1/12)
?pbinom
1 - pbinom(120, 1200, 1/12)
?pbinom
1 - pbinom(130, 1200, 31/365)
?pbinom
1 - pbinom(450, 1000, 31/365)
?pbinom
1 - pbinom(450, 1000, 0.42)
?pbinom
knitr::opts_chunk$set(echo = TRUE)
# Write your code here
qunif(0.75, min = 15, max = 45, lower.tail = F)
# Write your code here
qunif(0.75, min = 15, max = 45)
# Write your code here
pnorm(15, mean=17, sd=3, lower.tail=FALSE)
install.packages('carbonr')
install.packages('carbonr')
install.packages('devtools')
devtools::install_github("IDEMSInternational/carbonr")
library(carbonr)
carbonr
carbonr.airport_finder(name="Vancouver")
carbonr$airport_finder(name="Vancouver")
install.packages('carbonr')
install.packages("carbonr")
airport_finder(name = "Vancouver")
library(carbonr)
airport_finder(name = "Vancouver")
airport_finder(name = "Vancouver")
install.packages('readxl')
library(readxl)
install.packages("plumber")
library(plumber)
travel_expense_df <- read_excel('/Example_Generated_Travel_Expense_data.xlsx')
travel_expense_df <- read_excel('Example_Generated_Travel_Expense_data.xlsx')
travel_expense_df <- read_excel('Example_Generated_Travel_Expense_Data.xlsx')
install.packages('devtools')
devtools::install_github("IDEMSInternational/carbonr")
install.packages('readxl')
install.packages("plumber")
library(carbonr)
library(readxl)
library(plumber)
travel_expense_df <- read_excel('Example_Generated_Travel_Expense_Data.xlsx')
travel_expense_df <- read_excel('Example_Generated_Travel_Expense_Data.xlsx')
travel_expense_df <- read_excel('Example_Generated_Travel_Expense_Data')
getwd()
setwd("~/SBHacks/enviro-chain/src/backend")
travel_expense_df <- read_excel('/Example_Generated_Travel_Expense_Data')
travel_expense_df <- read_excel('/Example_Generated_Travel_Expense_Data.xlsx')
travel_expense_df <- read_excel('/Example_Generated_Travel_Expense_Data.xlsx')
travel_expense_df <- read_excel('Example_Generated_Travel_Expense_Data.xlsx')
travel_expense_df
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
for (row in nrow(df)) {
row
}
}
calculate_carbon_emission(travel_expense_df)
print(row)
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
for (row in 1:nrow(df)) {
print(row)
}
}
calculate_carbon_emission(travel_expense_df)
travel_expense_df$'Starting Point'
travel_expense_df$'Starting Point'[1]
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)[1]
ending_airport <- airport_finder(ending_point)[1]
emissions <- airplane_emissions(starting_airport, ending_airport)
total_emissions <- total_emissions + emissions
}
total_emissions
}
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)[1]
ending_airport <- airport_finder(ending_point)[1]
emissions <- airplane_emissions(starting_airport, ending_airport)
total_emissions <- total_emissions + emissions
}
total_emissions
}
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)[1]
ending_airport <- airport_finder(ending_point)[1]
#emissions <- airplane_emissions(starting_airport, ending_airport)
total_emissions <- total_emissions + emissions
}
starting_airport
}
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)[1]
ending_airport <- airport_finder(ending_point)[1]
#emissions <- airplane_emissions(starting_airport, ending_airport)
#total_emissions <- total_emissions + emissions
}
starting_airport
}
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)
ending_airport <- airport_finder(ending_point)
#emissions <- airplane_emissions(starting_airport, ending_airport)
#total_emissions <- total_emissions + emissions
}
starting_airport
}
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)[1, 'IATA']
ending_airport <- airport_finder(ending_point)
#emissions <- airplane_emissions(starting_airport, ending_airport)
#total_emissions <- total_emissions + emissions
}
starting_airport
}
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)[1, 'IATA']
ending_airport <- airport_finder(ending_point)[1, 'IATA']
emissions <- airplane_emissions(starting_airport, ending_airport)
total_emissions <- total_emissions + emissions
}
starting_airport
}
calculate_carbon_emission(travel_expense_df)
calculate_carbon_emission <- function(df) {
total_emissions <- 0
for (row in 1:nrow(df)) {
current_row <- df[row, ]
starting_point <- current_row$'Starting Point'
ending_point <- current_row$'Ending Point'
starting_airport <- airport_finder(starting_point)[[1, 'IATA']]
ending_airport <- airport_finder(ending_point)[[1, 'IATA']]
emissions <- airplane_emissions(starting_airport, ending_airport)
total_emissions <- total_emissions + emissions
}
starting_airport
}
calculate_carbon_emission(travel_expense_df)
airplane_emissions("YVR", "YTZ")
install.packages('devtools')
airport_finder(name = "Vancouver")
airplane_emissions("YVR", "YTZ")
airports
